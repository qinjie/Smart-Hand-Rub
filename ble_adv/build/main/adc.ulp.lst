ESP32ULP GAS  adc.ulp.pS 			page 1


   1              	       
   2              	 .set adc_channel, 6
   3              	 .set adc_oversampling_factor_log, 2
   4              	 .set adc_oversampling_factor, (1 << adc_oversampling_factor_log)
   5              	 .bss
   6              	 .global low_thr
   7              	low_thr:
   8 0000 00000000 	 .long 0
   9              	 .global high_thr
  10              	high_thr:
  11 0004 00000000 	 .long 0
  12              	 .global sample_counter
  13              	sample_counter:
  14 0008 00000000 	 .long 0
  15              	 .global last_result
  16              	last_result:
  17 000c 00000000 	 .long 0
  18              	 .text
  19              	 .global entry
  20              	entry:
  21 0000 03008072 	 move r3, sample_counter
  22 0004 0E0000D0 	 ld r2, r3, 0
  23 0008 1A000072 	 add r2, r2, 1
  24 000c 0E000068 	 st r2, r3, 0
  25 0010 08000072 	 add r0, r2, 0
  26 0014 04292782 	 jumpr wake_up, 10500, ge
  27 0018 00008072 	 move r0, 0
  28 001c 00004074 	 stage_rst
  29              	measure:
  30 0020 1D000050 	 adc r1, 0, adc_channel + 1, 0
  31 0024 10000070 	 add r0, r0, r1
  32 0028 10000074 	 stage_inc 1
  33 002c 04000685 	 jumps measure, adc_oversampling_factor, lt
  34 0030 2000C072 	 rsh r0, r0, adc_oversampling_factor_log
  35 0034 03008072 	 move r3, last_result
  36 0038 0C000068 	 st r0, r3, 0
  37 003c 03008072 	 move r3, low_thr
  38 0040 0F0000D0 	 ld r3, r3, 0
  39 0044 33002070 	 sub r3, r0, r3
  40 0048 00008080 	 jump wake_up, ov
  41 004c 03008072 	 move r3, high_thr
  42 0050 0F0000D0 	 ld r3, r3, 0
  43 0054 0F002070 	 sub r3, r3, r0
  44 0058 00008080 	 jump wake_up, ov
  45              	 .global exit
  46              	exit:
  47 005c 000000B0 	 halt
  48              	 .global wake_up
  49              	wake_up:
  50 0060 3000CC29 	 REG_RD ((((0x3ff48000 + 0xc0)) - 0x3ff48000) / 4), ((19) + (1) - 1), (19)
  51 0064 10004072 	 and r0, r0, 1
  52 0068 00004080 	 jump exit, eq
  53 006c 01000090 	 wake
  54 0070 0600601C 	 REG_WR ((((0x3ff48000 + 0x18)) - 0x3ff48000) / 4), ((24) + (((((((0x1) >> (0)) & 1) + (((0x1) >> (
  55 0074 000000B0 	 halt
